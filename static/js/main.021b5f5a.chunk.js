(this.webpackJsonpblog=this.webpackJsonpblog||[]).push([[0],{11:function(e){e.exports=JSON.parse("{\"2019\":{\"11\":{\"27\":{\"title\":\"Ol\xe1 mundo!\",\"description\":\"Primeiro post do blog!\",\"content\":\"## Nada melhor do que come\xe7ar com o clich\xea: *Ol\xe1 mundo!* \\n\\n Bem c\xe1 estou eu, come\xe7ando o primeiro post desse blog :) \\n Como parte da nota final de uma disciplina da faculdade era escrever um artigo, pensei que seria uma boa ideia criar um blog para documentar o que vou aprender/aprendi durante os anos como rebocador da web. Para iniciar, peguei algumas perguntas de um FAQ para responder: \\n \\n # Quem sou eu? \\n *Antonio* Eduardo Moreira, uma mistura de paulista com paranaense, 19 aninhos, acad\xeamico do curso de tecnologia em sistemas para internet na UTFPR, campus Guarapuava. Atualmente trabalho na Codeminer42 predominantemente no Front-End. \\n \\n # Por que come\xe7ou a codar? \\n Bom, eu sempre gostei bastante de tecnologia no geral, e no final de 2017, no final do ensino m\xe9dio, acabei escolhendo uma faculdade que me trouxe at\xe9 aqui. Conheci muitas pessoas que me ensinaram grande parte das coisas que sei hoje, e sou bastante feliz com a profiss\xe3o. \\n \\n # Back ou front? \\n Como comentei acima, atualmente na Codeminer, eu sou mais front, trabalhando bastante com react (esse blog tamb\xe9m \xe9 feito em react por sinal), mas na minha empresa antiga eu era mais back do que front. Afinal de contas eu gosto dos dois, \xe9 mais uma quest\xe3o de 'fase'. \\n \\n # Primeira linguagem? \\n Eu comecei mesmo a programar de fato na faculdade, e como na maioria das faculdades, eles apresentam para os alunos Java, comigo n\xe3o foi diferente, comecei com Java, confesso que tenho um certo amor e \xf3dio pela linguagem. \\n \\n # Linguagem favorita? \\n Eu n\xe3o tenho uma linguagem favorita, na empresa antiga eu trabalhava praticamente 100% do tempo com PHP, atualmente mexo muito pouco com PHP, mais JavaScript e Ruby. Gosto bastante dessas comunidades do JS e Ruby. \\n \\n Acho que era isso, em breve pretendo postar coisas mais t\xe9cnicas, desde j\xe1, valeu!\",\"images\":[],\"tags\":[]}},\"12\":{\"03\":{\"title\":\"Atualiza\xe7\xf5es em tempo real com WebSocket!\",\"description\":\"Funcionamento de websocket dentro do spring\",\"content\":\"Ao longo dos anos a web, juntamente da tecnologia, foi evoluindo cada vez mais. O paradigma convencional no estilo request/ \\nresponse via protocolo HTTP resolvem grande parte dos nosso problemas. Em meados de 2005, as t\xe3o famosas chamadas *Ajax*\\nsurgiram, e na \xe9poca foram simplesmente uma revolu\xe7\xe3o, pois antes delas existirem n\xe3o era poss\xedvel atualizar dados de uma\\n p\xe1gina da web sem fazer com que o usu\xe1rio recarregasse sua p\xe1gina, a id\xe9ia de fazer requisi\xe7\xf5es dessa forma era genial!\\n\\nO tempo foi passando e as famosas chamadas *Ajax* deixaram de ser 'de outro mundo', diversos softwares passaram a utilizar e isso passou a virar o cotidiano da maior parte dos desenvolvedores. As chamadas *Ajax* tinham um grave problema que era o alto custo em manter as informa\xe7\xf5es atualizadas, pois a responsabilidade de atualiza\xe7\xe3o de dados ficava toda do lado do cliente, pois a requisi\xe7\xe3o era lan\xe7ada a partir da m\xe1quina dele, dessa forma, o problema do modelo request/response foi parcialmente solucionado.\\n\\nA partir de todos esses problemas e tamb\xe9m de uma necessidade do mercado, surgiu o *WebSocket*, uma tecnologia avan\xe7ada que permitia fazer atualiza\xe7\xf5es em tempo real atrav\xe9s do protocolo TCP. A comuni\xe7\xe3o entre cliente e servidor \xe9 feito atrav\xe9s de uma sess\xe3o de comuni\xe7\xe3o interativa, e por parte do cliente n\xe3o \xe9 t\xe3o custosa quanto as chamdas *Ajax*\\n\\n## Resumindo\\n\\n Sabe quando chega uma notifica\xe7\xe3o em algum site ou simplesmente um chat de atendimento em tempo real? Ent\xe3o, a chance de por tr\xe1s disso ter um WebSocket \xe9 alta, pois atualmente existem diversos modelos e linguagens que abordam o WebSocket de forma bastante simples, e no ecossistema Spring, n\xe3o \xe9 diferente! \\n \\n## M\xe3os a obra?\\n\\nA seguir temos um breve passo a passo de como dar in\xedcio a um aplicativo web interativo que far\xe1 o uso do WebSocket. Vale ressaltar que a troca de informa\xe7\xf5es atrav\xe9s do WebSocket ser\xe3o todas feitas via JSON, o que facilita a manipula\xe7\xe3o.\\n\\nComece o processo pensando em intera\xe7\xf5es de servi\xe7o. O servi\xe7o aceitar\xe1 mensagens contendo um nome em uma mensagem STOMP cujo corpo \xe9 um objeto JSON. Se o nome fornecido for 'Fred', a mensagem poder\xe1 ser algo como isto:\\n\\n`{\\n'name': 'Fred'\\n}\\n`\\n\\nE a partir dessa simples informa\xe7\xe3o que pode ser enviada via WebSocket pode ser gerada diversas aplica\xe7\xf5es, como por exemplo uma sala de chat, onde quando um usu\xe1rio se conectar apresentar que ele entrou.\\n\\n Para modelar a mensagem que leva o nome, voc\xea pode criar um objeto Java simples:\\n\\n```public class HelloMessage {\\nprivate String name;\\n\\npublic HelloMessage() {\\n}\\n\\n public HelloMessage(String name) {\\n this.name = name;\\n}\\n\\n public String getName() {\\n return name;\\n}\\n\\n public void setName(String name) {\\nthis.name = name;\\n}\\n}\\n```\\n\\n Ao receber a mensagem e extrair o nome, o servi\xe7o a processar\xe1 criando uma sauda\xe7\xe3o e publicando essa sauda\xe7\xe3o em uma fila separada na qual o cliente est\xe1 inscrito. A sauda\xe7\xe3o tamb\xe9m ser\xe1 um objeto JSON, que pode ser algo como isto:\\n\\n`\\n{\\n'content': 'Hello,Fred!'\\n}\\n`\\n\\nO Spring usar\xe1 a biblioteca [JSON Jackson](https://www.baeldung.com/jackson) para organizar automaticamente inst\xe2ncias do tipo Greetingno JSON. Em seguida, voc\xea criar\xe1 um controlador para receber a mensagem de sauda\xe7\xe3o e enviar uma mensagem de sauda\xe7\xe3o.\\n\\n## Criar um controlador de manipula\xe7\xe3o de mensagens\\n\\nNa abordagem do Spring para trabalhar com mensagens STOMP, as mensagens STOMP podem ser roteadas para as @GreetingController. Por exemplo, o GreetingController ser\xe1 mapeado para manipular mensagens para o destino '/hello'.\\n\\n```\\nimport org.springframework.messaging.handler.annotation.MessageMapping;\\nimport org.springframework.messaging.handler.annotation.SendTo;\\n import org.springframework.stereotype.Controller;\\n import org.springframework.web.util.HtmlUtils;\\n\\n@Controller\\npublic class GreetingController {\\n\\n@MessageMapping('/hello')\\n@SendTo('/topic/greetings')\\npublic Greeting greeting(HelloMessage message) throws Exception {\\nThread.sleep(1000); // simulando um delay \\nreturn new Greeting('Hello, ' + HtmlUtils.htmlEscape(message.getName()) + '!');\\n}\\n}\\n```\\n\\nEste controlador \xe9 conciso e simples, mas h\xe1 muita coisa acontecendo. Vamos dividir passo a passo.\\nA @MessageMapping garante que, se uma mensagem for enviada para o destino '/ hello', o greeting() m\xe9todo ser\xe1 chamado.\\n\\nA carga \xfatil da mensagem est\xe1 vinculada a um HelloMessage objeto que \xe9 passado para greeting().\\n\\nInternamente, a implementa\xe7\xe3o do m\xe9todo simula um atraso no processamento, fazendo com que o encadeamento entre em repouso por 1 segundo. Isso \xe9 para demonstrar que, depois que o cliente envia uma mensagem, o servidor pode demorar o tempo necess\xe1rio para processar a mensagem de forma ass\xedncrona. O cliente pode continuar com o trabalho que precisa realizar sem aguardar a resposta.\\n\\nAp\xf3s o atraso de 1 segundo, o greeting() cria um objeto Greeting e o retorna. O valor de retorno \xe9 transmitido a todos os assinantes para '/topic/greetings', conforme especificado na @SendTo. Observe que o nome da mensagem de entrada \xe9 higienizado, pois, nesse caso, ele ser\xe1 repetido e renderizado novamente no DOM do navegador no lado do cliente.\\n\\n## Configurar o Spring para mensagens STOMP\\n\\nAgora que os componentes essenciais do servi\xe7o foram criados, voc\xea pode configurar o Spring para ativar as mensagens WebSocket e STOMP.\\n\\nCrie uma classe Java chamada WebSocketConfig:\\n\\n```@Configuration\\n@EnableWebSocketMessageBroker\\npublic class WebSocketConfig implements WebSocketMessageBrokerConfigurer {\\n @Override\\npublic void configureMessageBroker(MessageBrokerRegistry config) {\\nconfig.enableSimpleBroker('/topic');\\nconfig.setApplicationDestinationPrefixes('/app');\\n}\\n\\n@Override\\npublic void registerStompEndpoints(StompEndpointRegistry registry) { \\nregistry.addEndpoint('/gs-guide-websocket').withSockJS();\\n}\\n}\\n```\\n\\n WebSocketConfig \xe9 anotado com @Configuration para indicar que \xe9 uma classe de configura\xe7\xe3o do Spring. Tamb\xe9m \xe9 anotado @EnableWebSocketMessageBroker. Como o pr\xf3prio nome sugere, @EnableWebSocketMessageBroker habilita o tratamento de mensagens do WebSocket, suportado por um intermedi\xe1rio de mensagens.\\n\\nO configureMessageBroker() implementa o m\xe9todo padr\xe3o WebSocketMessageBrokerConfigurer para configurar o intermedi\xe1rio de mensagens. Ele come\xe7a chamando enableSimpleBroker() para permitir que um simples intermedi\xe1rio de mensagens baseado em mem\xf3ria leve as mensagens de sauda\xe7\xe3o de volta ao cliente em destinos prefixados com '/topic'. Ele tamb\xe9m designa o prefixo '/app' para mensagens vinculadas a @MessageMapping n\xe3o anotados. Esse prefixo ser\xe1 usado para definir todos os mapeamentos de mensagens; por exemplo, '/app/ hello' \xe9 o terminal que o GreetingController.greeting() est\xe1 mapeado para manipular.\\n\\nO registerStompEndpoints() registra o terminal '/gs-guide-websocket', ativando as op\xe7\xf5es de fallback do SockJS para que transportes alternativos possam ser usados \u200b\u200bse o WebSocket n\xe3o estiver dispon\xedvel. O cliente SockJS tentar\xe1 se conectar ao '/ gs-guide-websocket' e usar\xe1 o melhor transporte dispon\xedvel (websocket, xhr-streaming, xhr-polling, etc.).\\n\\n## Lado do cliente\\n\\nCom as pe\xe7as do lado do servidor, agora vamos voltar a aten\xe7\xe3o para o cliente JavaScript que enviar\xe1 e receber\xe1 mensagens do lado do servidor. Voc\xea precisar\xe1 importar tamb\xe9m do lado do cliente, as bibliotecas javascript SockJS e STOMP que ser\xe3o usadas para se comunicar com nosso servidor usando o STOMP no websocket.\\n\\nE usando JQuery o funcionamento seria basicamente assim:\\n\\n\\nvar stompClient = null;\\n\\n```function connect() {\\nvar socket = new SockJS('/gs-guide-websocket');\\nstompClient = Stomp.over(socket);\\nstompClient.connect({}, function (frame) {\\nsetConnected(true);\\nconsole.log('Connected: ' + frame);\\nstompClient.subscribe('/topic/greetings', function (greeting) {\\nshowGreeting(JSON.parse(greeting.body).content);\\n});\\n});\\n}\\n\\nfunction disconnect() {\\nif (stompClient !== null) {\\nstompClient.disconnect();\\n}\\nsetConnected(false);\\nconsole.log('Disconnected');\\n}\\n\\nfunction sendName(name) {\\nstompClient.send('/app/hello', {}, JSON.stringify({ name }));\\n}\\n\\n```\\nA parte principal deste arquivo JavaScript a ser observada \xe9 as fun\xe7\xf5es connect() e sendName().\\n\\nA connect() fun\xe7\xe3o usa SockJS e stomp.js para abrir uma conex\xe3o com '/gs-guide-websocket', que \xe9 onde nosso servidor SockJS est\xe1 aguardando conex\xf5es. Ap\xf3s uma conex\xe3o bem-sucedida, o cliente assina o destino '/topic/ greetings', onde o servidor publicar\xe1 mensagens de sauda\xe7\xe3o.\\n\\nA sendName() fun\xe7\xe3o recebe um nome e usa o cliente STOMP para envi\xe1-lo ao destino '/app/ hello' (onde GreetingController.greeting() o receber\xe1).\\n\\n ## Concluindo \\n\\nA partir desse exemplo acima, \xe9 poss\xedvel construir v\xe1rias aplica\xe7\xf5es interessantes e relativamente simples em quest\xe3o de arquitetura gra\xe7as ao ecossistema Spring que aborda de forma bastante inteligente o WebSocket. O conte\xfado base desse artigo foi traduzido e inspirado diretamente da documenta\xe7\xe3o oficial do Spring, que voc\xea pode checar [aqui](https://spring.io/guides/gs/messaging-stomp-websocket/). Muito obrigado e at\xe9 a pr\xf3xima!\",\"images\":[],\"tags\":[\"spring\",\"java\",\"websocket\"]}}}}")},145:function(e,a,n){},146:function(e,a,n){},149:function(e,a,n){},150:function(e,a,n){},151:function(e,a,n){},152:function(e,a,n){},153:function(e,a,n){},154:function(e,a,n){},155:function(e,a,n){},156:function(e,a,n){},157:function(e,a,n){},158:function(e,a,n){},159:function(e,a,n){},160:function(e,a,n){},161:function(e,a,n){"use strict";n.r(a);var t=n(1),o=n.n(t),r=n(23),s=n.n(r),i=n(8),c=n(44),l=(n(53),function(e){var a=e.color,n=e.percentage,r=e.label,s=Object(t.useState)(0),l=Object(i.a)(s,2),m=l[0],u=l[1];return setTimeout((function(){u(n)}),500),o.a.createElement("div",{className:"Chart"},o.a.createElement("label",{className:"Chart__label"},r),o.a.createElement(c.a,{percent:m,strokeWidth:"1",strokeColor:a}))}),m=(n(54),function(e){var a=e.title,n=e.data;return o.a.createElement("div",{className:"HabilitiesSession"},o.a.createElement("h3",{className:"HabilitiesSession__title"},a),n.map((function(e){return o.a.createElement("div",{className:"HabilitiesSession__chart",key:e.color},o.a.createElement(l,{color:e.color,percentage:e.percent,label:e.name,key:e.name}))})))}),u=(n(55),[{name:"JavaScript",percent:95,color:"#f7df1e"},{name:"PHP",percent:80,color:"#556694"},{name:"Java",percent:65,color:"#749bb8"},{name:"Ruby",percent:40,color:"#eb5745"}]),d=[{name:"React",percent:80,color:"#53c1de"},{name:"Rails",percent:50,color:"#a33236"}],p=[{name:"Phosothop (UI/UX)",percent:80,color:"#0e4888"}],g=function(){return o.a.createElement("div",{className:"About"},o.a.createElement("div",{className:"About__stack"},o.a.createElement("h3",null,"Minha ",o.a.createElement("b",null,"stack:"))),o.a.createElement("div",{className:"About__stacks"},o.a.createElement(m,{title:"Linguagens",data:u}),o.a.createElement(m,{title:"Frameworks",data:d}),o.a.createElement(m,{title:"Outros",data:p})))},f=function(e){var a=e.to,n=e.children;return o.a.createElement("a",{href:"".concat("https://edumoreira1506.github.io/blog/","#/").concat(a)},n)},b=(n(56),function(e){var a=e.date,n=e.title,t=e.tags,r=e.description;return o.a.createElement(f,{to:"post/".concat(a)},o.a.createElement("li",{className:"Post"},o.a.createElement("h3",{className:"Post__title"},n),o.a.createElement("p",{className:"Post__content"},r),o.a.createElement("h5",{className:"Post__details"},a,t.map((function(e){return o.a.createElement(f,{key:e,to:"tag/".concat(e)},e)})))))}),v=(n(57),function(e){var a=e.posts;return o.a.createElement("ul",{className:"PostList"},a.map((function(e){return o.a.createElement(b,{key:e.date,date:e.date,title:e.title,tags:e.tags,content:e.content,description:e.description})})))}),h=n(39),E=n(11);function k(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function S(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?k(n,!0).forEach((function(a){Object(h.a)(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):k(n).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}var N=function(){return _(E).map((function(e){return Object.keys(E[e]).map((function(a){return Object.keys(E[e][a]).map((function(n){return S({},E[e][a][n],{date:"".concat(n,"/").concat(a,"/").concat(e)})})).flat()})).flat()})).flat()},_=function(e){return Object.keys(e)},C=(n(58),function(){return o.a.createElement("div",{className:"Main"},o.a.createElement("div",{className:"Main__welcome"},o.a.createElement("h3",null,"Bem vindo ao ",o.a.createElement("b",null,"meu mundo!"))),o.a.createElement(v,{posts:N()}))}),O=(n(59),n(40)),w=n(41),q=n.n(w),y=(n(145),function(e){var a=e.match;try{var n=function(e){var a=e.params;return S({},E[a.year][a.month][a.day],{date:"".concat(a.day,"/").concat(a.month,"/").concat(a.year)})}(a);return o.a.createElement("div",{className:"Article"},o.a.createElement("h2",{className:"Article__title"},n.title),o.a.createElement("h3",{className:"Article__description"},n.description),n.images.length?o.a.createElement("div",{className:"Article__carousel"},o.a.createElement(O.Carousel,{autoPlay:!0},n.images.map((function(e){return o.a.createElement("img",{src:e,alt:e,key:e})})))):null,o.a.createElement("div",{className:"Article__content"},o.a.createElement(q.a,{source:n.content})),o.a.createElement("div",{className:"Article__details"},n.tags.map((function(e){return o.a.createElement(f,{key:e,to:"tag/".concat(e)},e)})),o.a.createElement("span",{className:"Article__details--bold"},n.date)))}catch(t){return null}}),P=n(15),j=function(e){return e.params.tag},A=(n(146),function(e){var a,n=e.match;return o.a.createElement("div",{className:"Tag"},o.a.createElement(v,{posts:(a=j(n),N().filter((function(e){return e.tags.includes(a)})))}))}),M=n(45),x=n(7),J=function(){return o.a.createElement(M.a,{basename:"/"},o.a.createElement(x.a,{exact:!0,path:"/about",component:g}),o.a.createElement(x.a,{exact:!0,path:"/",component:C}),o.a.createElement(x.a,{path:"/post/:day/:month/:year",component:y}),o.a.createElement(x.a,{path:"/tag/:tag",component:A}))},T=(n(149),function(){return o.a.createElement("img",{className:"ImagePerfil",src:"".concat("https://edumoreira1506.github.io/blog/","eduardo.jpg"),alt:"Eduardo Moreira"})}),W=(n(150),function(){return o.a.createElement("div",{className:"Perfil"},o.a.createElement(T,null))}),B=(n(151),function(e){var a=e.onSubmit,n=e.value,t=e.onChange;return o.a.createElement("form",{className:"Search",onSubmit:a},o.a.createElement("input",{value:n,onChange:t,required:!0,type:"text",placeholder:"Buscar..."}))}),z=(n(152),function(e){var a=e.title,n=e.description,t=e.date;return o.a.createElement(f,{to:"post/".concat(t)},o.a.createElement("li",{className:"PostCategory"},o.a.createElement("h3",{className:"PostCategory__title"},a),o.a.createElement("h4",{className:"PostCategory__description"},n),o.a.createElement("h5",{className:"PostCategory__date"},t)))}),H=(n(153),function(e){var a=e.posts;return o.a.createElement("ul",{className:"Posts"},a.map((function(e){return o.a.createElement(z,{title:e.title,description:e.description,date:e.date,key:e.date})})))}),G=function(e){var a=e.tag;return o.a.createElement(f,{to:"tag/".concat(a)},a)},R=function(e){return e.tags.map((function(e){return o.a.createElement(G,{tag:e,key:e})}))},L=(n(154),function(){var e=Object(t.useState)(N()),a=Object(i.a)(e,2),n=a[0],r=a[1],s=Object(t.useState)(""),c=Object(i.a)(s,2),l=c[0],m=c[1];return o.a.createElement("div",{className:"CategoriesList"},o.a.createElement("div",{className:"CategoriesList__block"},o.a.createElement(B,{onSubmit:function(e){e.preventDefault(),r(function(e){return N().filter((function(a){return a.description.includes(e)||a.title.includes(e)}))}(l))},value:l,onChange:function(e){e.preventDefault(),m(e.target.value)}})),o.a.createElement("div",{className:"CategoriesList__tags"},o.a.createElement(R,{tags:N().reduce((function(e,a){var n=a.tags.reduce((function(a,n){return e.includes(n)?a:[].concat(Object(P.a)(a),[n])}),[]).flat();return[].concat(Object(P.a)(e),Object(P.a)(n))}),[])})),o.a.createElement("div",{className:"CategoriesList__block"},o.a.createElement(H,{posts:n})))}),D=(n(155),function(e){var a=e.children,n=e.choiced,t=e.onClick;return o.a.createElement("button",{onClick:t,className:"Button ".concat(n?"Button--choiced":"")},a)}),F=(n(156),function(){return o.a.createElement("h1",{className:"TitleSite"},"Eduardo Moreira")}),U=n(10),I=n(14),Q=(n(157),function(){return o.a.createElement("div",{className:"Contacts"},o.a.createElement("a",{className:"Contacts__link",rel:"noopener noreferrer",href:"https://www.linkedin.com/in/uieduardo/",target:"_blank"},o.a.createElement(U.b,null)),o.a.createElement("a",{className:"Contacts__link",rel:"noopener noreferrer",href:"https://github.com/edumoreira1506",target:"_blank"},o.a.createElement(U.a,null)),o.a.createElement("a",{className:"Contacts__link",rel:"noopener noreferrer",href:"mailto:contato@eduardoem.com.br",target:"_blank"},o.a.createElement(I.b,null)),o.a.createElement("a",{className:"Contacts__link",rel:"noopener noreferrer",href:"https://api.whatsapp.com/send?phone=5515996442031&text=Ol%C3%A1%20Eduardo!",target:"_blank"},o.a.createElement(U.d,null)))}),V=(n(158),function(){var e=Object(t.useState)(0),a=Object(i.a)(e,2),n=a[0],r=a[1],s=[o.a.createElement(W,null),o.a.createElement(L,null)];return o.a.createElement("div",{className:"SideBar"},o.a.createElement("div",{className:"SideBar__buttons"},o.a.createElement("div",{className:"SideBar__options"},o.a.createElement(D,{onClick:function(){return r(0)},choiced:0===n},o.a.createElement(U.c,null)),o.a.createElement(D,{onClick:function(){return r(1)},choiced:1===n},o.a.createElement(I.a,null)))),o.a.createElement("div",{className:"SideBar__title"},o.a.createElement(F,null)),o.a.createElement(Q,null),s[n])}),X=function(){return o.a.createElement("span",null,o.a.createElement(f,{to:""},"Home"),o.a.createElement(f,{to:"about"},"Sobre"))},$=(n(159),function(e){var a=e.children;return o.a.createElement("div",{className:"Template"},o.a.createElement("div",{className:"Template__personal"},o.a.createElement(V,null)),o.a.createElement("div",{className:"Template__content"},o.a.createElement("div",{className:"Template__menu"},o.a.createElement(X,null)),a),o.a.createElement("div",{className:"Template__contacts"},o.a.createElement(Q,null)))}),K=function(e){return o.a.createElement($,null,e)},Y=function(){return K(o.a.createElement(J,null))},Z=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function ee(e,a){navigator.serviceWorker.register(e).then((function(e){e.onupdatefound=function(){var n=e.installing;null!=n&&(n.onstatechange=function(){"installed"===n.state&&(navigator.serviceWorker.controller?(console.log("New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA."),a&&a.onUpdate&&a.onUpdate(e)):(console.log("Content is cached for offline use."),a&&a.onSuccess&&a.onSuccess(e)))})}})).catch((function(e){console.error("Error during service worker registration:",e)}))}n(160);s.a.render(o.a.createElement(Y,null),document.getElementById("root")),function(e){if("serviceWorker"in navigator){if(new URL("/blog",window.location.href).origin!==window.location.origin)return;window.addEventListener("load",(function(){var a="".concat("/blog","/service-worker.js");Z?(!function(e,a){fetch(e).then((function(n){var t=n.headers.get("content-type");404===n.status||null!=t&&-1===t.indexOf("javascript")?navigator.serviceWorker.ready.then((function(e){e.unregister().then((function(){window.location.reload()}))})):ee(e,a)})).catch((function(){console.log("No internet connection found. App is running in offline mode.")}))}(a,e),navigator.serviceWorker.ready.then((function(){console.log("This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA")}))):ee(a,e)}))}}()},46:function(e,a,n){e.exports=n(161)},53:function(e,a,n){},54:function(e,a,n){},55:function(e,a,n){},56:function(e,a,n){},57:function(e,a,n){},58:function(e,a,n){}},[[46,1,2]]]);
//# sourceMappingURL=main.021b5f5a.chunk.js.map