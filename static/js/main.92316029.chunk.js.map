{"version":3,"sources":["pages/About.js","models/posts.js","components/Posts/Post.js","components/Posts/index.js","pages/Main.js","pages/Post.js","pages/Tag.js","models/tags.js","routes.js","components/Template/PerfilArea/ImageArea.js","components/Template/PerfilArea/index.js","components/Template/CategoriesArea/SearchArea.js","components/Template/CategoriesArea/Posts/Post.js","components/Template/CategoriesArea/Posts/index.js","components/Template/CategoriesArea/TagsArea/Tag.js","components/Template/CategoriesArea/TagsArea/index.js","components/Template/CategoriesArea/index.js","components/Template/ButtonArea.js","components/Template/TitleSite.js","components/Template/PersonalArea.js","components/Template/Menu.js","components/Template/index.js","util.js","App.js","serviceWorker.js","index.js"],"names":["About","getAll","getYears","posts","map","year","Object","keys","month","day","date","flat","Post","title","tags","content","basename","to","className","substring","PostModel","length","tag","key","Posts","post","Main","arrayDate","window","location","hash","replace","split","description","images","autoPlay","image","src","alt","paragraph","Tag","filter","includes","routes","exact","path","component","ImageArea","PerfilArea","SearchArea","onSubmit","value","onChange","required","type","placeholder","PostsArea","TagsArea","CategoriesArea","useState","setPosts","keyWord","setKeyWord","e","preventDefault","target","reduce","tagsPosts","tagsPost","tagPost","ButtonArea","children","choiced","onClick","TitleSite","PersonalArea","openedArea","setOpenedArea","areas","Menu","Template","WithTheme","App","withTheme","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.92316029.chunk.js","sourcesContent":["import React from 'react'\n\nconst About = () => <h1>About!</h1>\n\nexport default About\n","import posts from '../posts.json'\n\nexport const getAll = () =>\n  getYears(posts).map(year =>\n    Object.keys(posts[year]).map(month =>\n      Object.keys(posts[year][month]).map(day => ({\n          ...posts[year][month][day],\n          date: `${day}/${month}/${year}`\n        })\n      ).flat()\n    ).flat()\n  ).flat()\n\nexport const search = keyWord =>\n  getAll().filter(post => post.description.includes(keyWord) || post.title.includes(keyWord))\n\nexport const getContent = content => `${content[0].substring(0, 300)}...`\n\nexport const getPost = () => {\n  const date = window.location.hash.replace('#/post/','')\n  const arrayDate = date.split('/')\n  return {\n    ...posts[arrayDate[2]][arrayDate[1]][arrayDate[0]],\n    date: `${arrayDate[0]}/${arrayDate[1]}/${arrayDate[2]}`\n  }\n}\n\nexport const getByTag = tag =>\n  getAll().filter(post =>\n    post.tags.includes(tag)\n  )\n\nconst getYears = posts => Object.keys(posts)","import React from 'react'\nimport './Post.scss'\nimport * as PostModel from '../../models/posts'\nimport { HashRouter, Link } from 'react-router-dom'\n\nconst Post = ({\n  date,\n  title,\n  tags,\n  content\n}) =>\n  <HashRouter basename=\"/post\">\n    <Link to={date}>\n      <li className=\"BigPost\">\n        <h3 className=\"BigPost__title\">\n          { title }\n        </h3>\n        <p className=\"BigPost__content\">\n          { PostModel.getContent(content) }\n        </p>\n        <h5 className=\"BigPost__details\">\n          { date }\n          { \n            tags.length &&\n              <HashRouter basename=\"/tag\">\n                {\n                  tags.map(tag =>\n                    <Link key={tag} to={tag}>\n                      { tag }\n                    </Link>\n                  )\n                }\n              </HashRouter> \n          }\n        </h5>\n      </li>\n    </Link>\n  </HashRouter>\n\nexport default Post\n","import React from 'react'\nimport Post from './Post'\nimport './Posts.scss'\n\nconst Posts = ({ posts }) =>\n  <ul className=\"Posts\">\n    {\n      posts.map(post =>\n        <Post\n          key={post.date}\n          date={post.date}\n          title={post.title}\n          tags={post.tags}\n          content={post.content}\n        />\n      )\n    }\n  </ul>\n\nexport default Posts\n","import React from 'react'\nimport Posts from '../components/Posts'\nimport * as Post from '../models/posts'\nimport './Main.scss'\n\nconst Main = () =>\n  <div className=\"Main\">\n    <div className=\"Main__welcome\">\n      <h3>Bem vindo ao <b>meu mundo!</b></h3>\n    </div>\n    <Posts\n      posts={Post.getAll()}\n    />\n  </div>\n\nexport default Main\n","import React from 'react'\nimport * as PostModel from '../models/posts'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel'\nimport { HashRouter, Link } from 'react-router-dom'\nimport './Post.scss'\n\nconst Post = () => {\n  try {\n    const post = PostModel.getPost()\n\n    return (\n      <div className=\"Article\">\n        <h2 className=\"Article__title\">\n          { post.title }\n        </h2>\n        <h3 className=\"Article__description\">\n          { post.description }\n        </h3>\n        {\n          post.images.length ?\n            <div className=\"Article__carousel\">\n              <Carousel autoPlay>\n                {\n                  post.images.map(image =>\n                    <img src={image} alt={image} key={image} />\n                  )\n                }\n              </Carousel>\n            </div> : null\n        }\n        <div className=\"Article__content\">\n          {\n            post.content.map(paragraph =>\n              <p key={paragraph}> { paragraph } </p>\n            )\n          }\n        </div>\n        <div className=\"Article__details\">\n          <HashRouter basename=\"/tag\">\n            {\n              post.tags.map(tag =>\n                <Link key={tag} to={`/${tag}`}>{ tag }</Link>\n              )\n            }\n          </HashRouter>\n          <span className=\"Article__details--bold\">\n            { post.date }\n          </span>\n        </div>\n      </div>\n    )\n  } catch {\n    return null\n  }\n}\n\nexport default Post\n","import React from 'react'\nimport Posts from '../components/Posts'\nimport * as Post from '../models/posts'\nimport * as TagModel from '../models/tags'\nimport './Tag.scss'\n\nconst Tag = () =>\n  <div className=\"Tag\">\n    <Posts\n      posts={Post.getByTag(TagModel.getTag())}\n    />\n  </div>\n\nexport default Tag\n\n","import * as Post from './posts'\n\nexport const getAll = () =>\n  Post.getAll().reduce((tags, post) => {\n    const tagsPosts = post.tags.reduce((tagsPost, tagPost) =>\n      tags.includes(tagPost) ? tagsPost : [...tagsPost, tagPost]\n    , []).flat()\n    return [...tags, ...tagsPosts]\n  }, [])\n\nexport const getTag = () => window.location.hash.replace('#/tag/','')\n","import React from 'react'\nimport About from './pages/About'\nimport Main from './pages/Main'\nimport Post from './pages/Post'\nimport Tag from './pages/Tag'\nimport { HashRouter, Route } from 'react-router-dom'\n\nconst routes = () =>\n  <HashRouter basename=\"/\">\n    <Route exact path='/about' component={About} />\n    <Route exact path='/' component={Main} />\n    <Route path='/post' component={Post} />\n    <Route path='/tag' component={Tag} />\n  </HashRouter>\n\nexport default routes\n","import React from 'react'\nimport './ImageArea.scss'\n\nconst ImageArea = () =>\n  <img\n    className=\"ImageArea\"\n    src=\"https://i1.wp.com/www.joelonsoftware.com/wp-content/uploads/2016/12/Pong.png?w=730&ssl=1\"\n    alt=\"Eduardo Moreira\"\n  />\n\nexport default ImageArea\n","import React from 'react';\nimport ImageArea from './ImageArea'\nimport './PerfilArea.scss'\n\nconst PerfilArea = () =>\n  <div className=\"PerfilArea\">\n    <ImageArea />\n  </div>\n\nexport default PerfilArea\n","import React from 'react'\nimport './SearchArea.scss'\n\nconst SearchArea = ({\n  onSubmit,\n  value,\n  onChange\n}) =>\n  <form className=\"SearchArea\" onSubmit={onSubmit}>\n    <input value={value} onChange={onChange} required type=\"text\" placeholder=\"Buscar...\" />\n  </form>\n\nexport default SearchArea\n","import React from 'react'\nimport { Link, HashRouter } from 'react-router-dom'\nimport './Post.scss'\n\nconst Post = ({\n  title,\n  description,\n  date\n}) =>\n  <HashRouter basename=\"/post\">\n    <Link to={date}>\n      <li className=\"Post\">\n        <h3 className=\"Post__title\">\n          { title }\n        </h3>\n        <h4 className=\"Post__description\">\n          { description }\n        </h4>\n        <h5 className=\"Post__date\">\n          { date }\n        </h5>\n      </li>\n    </Link>\n  </HashRouter>\n\nexport default Post\n","import React from 'react'\nimport Post from './Post'\nimport './PostsArea.scss'\n\nconst PostsArea = ({\n  posts\n}) =>\n  <ul className=\"PostsArea\">\n    {\n      posts.map(post =>\n        <Post\n          title={post.title}\n          description={post.description}\n          date={post.date}\n          key={post.date} \n        />\n      )\n    }\n  </ul>\n\nexport default PostsArea\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Tag = ({\n  tag\n}) =>\n  <Link to={tag}>\n    { tag }\n  </Link>\n\n\nexport default Tag\n","import React from 'react'\nimport Tag from './Tag'\nimport { HashRouter } from 'react-router-dom'\n\nconst TagsArea = ({\n  tags\n}) =>\n  <HashRouter basename=\"/tag\">\n    {\n      tags.map(tag =>\n        <Tag tag={tag} key={tag} />\n      )\n    }\n  </HashRouter>\n\nexport default TagsArea\n","import React, { useState } from 'react'\nimport SearchArea from './SearchArea'\nimport PostsArea from './Posts'\nimport TagsArea from './TagsArea'\nimport * as Post from '../../../models/posts'\nimport * as Tag from '../../../models/tags'\nimport './CategoriesArea.scss'\n\nconst CategoriesArea = () => {\n  const [posts, setPosts] =  useState(Post.getAll())\n  const [keyWord, setKeyWord] = useState('')\n\n  const onSubmit = e => {\n    e.preventDefault()\n\n    setPosts(Post.search(keyWord))\n  }\n\n  const onChange = e => {\n    e.preventDefault()\n\n    setKeyWord(e.target.value)\n  }\n\n  return (\n    <div className=\"CategoriesArea\">\n      <div className=\"CategoriesArea__block\">\n        <SearchArea\n          onSubmit={onSubmit}\n          value={keyWord}\n          onChange={onChange}\n        />\n      </div>\n      <div className=\"CategoriesArea__tags\">\n        <TagsArea\n          tags={Tag.getAll()}\n        />\n      </div>\n      <div className=\"CategoriesArea__block\">\n        <PostsArea\n          posts={posts}\n        />\n      </div>\n    </div>   \n  )\n}\n\nexport default CategoriesArea\n","import React from 'react'\nimport './ButtonArea.scss'\n\nconst ButtonArea = ({\n  children,\n  choiced,\n  onClick\n}) =>\n  <button\n    onClick={onClick}\n    className={`ButtonArea ${ choiced ? 'ButtonArea--choiced' : '' }`}\n  >\n    { children }\n  </button>\n\nexport default ButtonArea\n","import React from 'react'\n\nimport './TitleSite.scss'\n\nconst TitleSite = () => <h1 className=\"TitleSite\">Eduardo Moreira</h1>\n\nexport default TitleSite\n","import React, { useState } from 'react'\nimport PerfilArea from './PerfilArea/index'\nimport CategoriesArea from './CategoriesArea/index'\nimport ButtonArea from './ButtonArea'\nimport TitleSite from './TitleSite'\nimport { FaUserAlt } from 'react-icons/fa'\nimport { IoIosGlobe } from 'react-icons/io'\n\nimport './PersonalArea.scss'\n\nconst PersonalArea = () => {\n  const [openedArea, setOpenedArea] = useState(0)\n\n  const areas = [\n    <PerfilArea />,\n    <CategoriesArea />\n  ]\n\n  return (\n    <div className=\"PersonalArea\">\n      <div className=\"PersonalArea__buttons\">\n        <div className=\"PersonalArea__options\">\n          <ButtonArea\n            onClick={() => setOpenedArea(0)}\n            choiced={openedArea === 0}\n          >\n            <FaUserAlt />\n          </ButtonArea>\n          <ButtonArea\n            onClick={() => setOpenedArea(1)}\n            choiced={openedArea === 1}\n          >\n            <IoIosGlobe />\n          </ButtonArea>\n        </div>\n      </div>\n      <div className=\"PersonalArea__title\">\n        <TitleSite />\n      </div>\n      { areas[openedArea] }\n    </div>\n  )\n}\n\nexport default PersonalArea\n","import React from 'react'\nimport { HashRouter, Link } from 'react-router-dom'\n\nconst Menu = () =>\n  <HashRouter basename=\"/\">\n    <Link to=\"/\">Home</Link>\n    <Link to=\"/about\">Sobre</Link>\n  </HashRouter>\n\nexport default Menu\n","import React from 'react'\nimport PersonalArea from './PersonalArea'\nimport Menu from './Menu'\n\nimport './Template.scss'\n\nconst Template = ({\n  children\n}) =>\n  <div className=\"Template\">\n    <div className=\"Template__personal\">\n      <PersonalArea />\n    </div>\n    <div className=\"Template__content\">\n      <div className=\"Template__menu\">\n        <Menu />\n      </div>\n      { children }\n    </div>\n  </div>\n\nexport default Template\n","import React from 'react'\nimport Template from './components/Template'\n\nconst WithTheme = content =>\n  <Template>\n    {content}\n  </Template>\n\nexport default WithTheme\n","import React from 'react'\nimport Router from './routes'\nimport withTheme from './util'\n\nconst App = () => withTheme(<Router />)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.scss'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}